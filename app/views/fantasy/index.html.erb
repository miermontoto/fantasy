<div class="flex flex-col">
  <div class="grid gap-y-2 grid-cols-1 md:grid-cols-2 p-2 bg-[#121824] rounded-lg justify-items-stretch">
    
    <!-- Market Data Section -->
    <div class="grid gap-y-2 grid-cols-1 p-2 order-last md:order-first">
      <div id="left-container">
        <%= render partial: "fantasy/partials/transfer_list", locals: { 
          paginated_feed_data: @paginated_feed_data, 
          paginated_market_data: @paginated_market_data, 
          current_page_feed: @current_page_feed, 
          current_page_market: @current_page_market, 
          total_pages_feed: @total_pages_feed, 
          total_pages_market: @total_pages_market 
        } %>
      </div>
    </div>

    <!-- Standings Section -->
    <div class="p-2">
      <h1 class="text-center font-bold text-2xl">CLASIFICACIÓN</h1>
      <%= render partial: 'fantasy/partials/standings', locals: { standings: @standings_data } %>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const transfersContainer = document.getElementById('transfers-container');
    const marketContainer = document.getElementById('market-container');
    
    // Function to update the page numbers and content after an AJAX load
    function updatePaginationControls(pageFeed, pageMarket, totalPagesFeed, totalPagesMarket) {
      // Update page numbers
      document.getElementById("current-page-feed").textContent = `Página ${pageFeed} de ${totalPagesFeed}`;
      document.getElementById("current-page-market").textContent = `Página ${pageMarket} de ${totalPagesMarket}`;
      
      // Update button states
      document.querySelector('.previous-feed').disabled = pageFeed <= 1;
      document.querySelector('.next-feed').disabled = pageFeed >= totalPagesFeed;
      document.querySelector('.previous-market').disabled = pageMarket <= 1;
      document.querySelector('.next-market').disabled = pageMarket >= totalPagesMarket;
      
      // Update data-page attributes
      document.querySelector('.previous-feed').dataset.page = pageFeed - 1;
      document.querySelector('.next-feed').dataset.page = pageFeed + 1;
      document.querySelector('.previous-market').dataset.page = pageMarket - 1;
      document.querySelector('.next-market').dataset.page = pageMarket + 1;
    }

    // Function to load new content (market and feed)
    function loadPage(pageFeed, pageMarket) {
      // Construct the URL with the page parameters
      const url = `/?page_feed=${pageFeed}&page_market=${pageMarket}`;
      console.log(url);

      // Fetch the new content
      fetch(url, {
        headers: { 'X-Requested-With': 'XMLHttpRequest' }
      })
      .then(response => response.text())
      .then(html => {
        // Create a temporary DOM to parse the new HTML
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = html;

        console.log(tempDiv);
        
        // Only replace the relevant parts of the page
        const newTransfersHTML = tempDiv.querySelector('#transfers-container').innerHTML;
        const newMarketHTML = tempDiv.querySelector('#market-container').innerHTML;

        console.log(newMarketHTML);
        console.log(newTransfersHTML);

        // Update the transfers and market containers with the new HTML
        transfersContainer.innerHTML = newTransfersHTML;
        marketContainer.innerHTML = newMarketHTML;

        console.log(transfersContainer.innerHTML);
        console.log(marketContainer);

        // Update pagination controls with the new values from the response
        const totalPagesFeed = tempDiv.querySelector('#current-page-feed').dataset.totalpages;
        const totalPagesMarket = tempDiv.querySelector('#current-page-market').dataset.totalpages;

        updatePaginationControls(pageFeed, pageMarket, totalPagesFeed, totalPagesMarket);
      });
    }

    document.addEventListener('click', function(event) {
      // Check if the clicked element is one of the pagination buttons
      if (event.target.classList.contains('previous-feed')) {
        const pageFeed = parseInt(event.target.dataset.page); // get new page for feed
        const pageMarket = parseInt(document.querySelector('.next-market').dataset.page-1); // keep current market page
        loadPage(pageFeed, pageMarket);
      } 
      else if (event.target.classList.contains('next-feed')) {
        const pageFeed = parseInt(event.target.dataset.page); // get new page for feed
        const pageMarket = parseInt(document.querySelector('.next-market').dataset.page-1); // keep current market page
        loadPage(pageFeed, pageMarket);
      } 
      else if (event.target.classList.contains('previous-market')) {
        const pageMarket = parseInt(event.target.dataset.page); // get new page for market
        const pageFeed = parseInt(document.querySelector('.next-feed').dataset.page-1); // keep current feed page
        loadPage(pageFeed, pageMarket);
      } 
      else if (event.target.classList.contains('next-market')) {
        const pageMarket = parseInt(event.target.dataset.page); // get new page for market
        const pageFeed = parseInt(document.querySelector('.next-feed').dataset.page-1); // keep current feed page
        loadPage(pageFeed, pageMarket);
      }
    });


    // // Event delegation: Listen for clicks on pagination buttons
    // document.addEventListener('click', function(event) {
    //   // If the clicked element is a pagination button
    //   if (event.target.classList.contains('previous-feed') || event.target.classList.contains('next-feed') || 
    //       event.target.classList.contains('previous-market') || event.target.classList.contains('next-market')) {
        
    //     // Get the page number from the button's data-page attribute
    //     const pageFeed = parseInt(event.target.dataset.page);
    //     const pageMarket = parseInt(event.target.dataset.page);

    //     console.log(pageFeed, pageMarket);
        
    //     // Trigger the page load function
    //     if (event.target.classList.contains('previous-feed') || event.target.classList.contains('next-feed')) {
    //       loadPage(pageFeed, pageMarket);
    //     }
    //   }
    // });
  });
</script>
